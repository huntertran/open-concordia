{"version":3,"sources":["context/api.js","components/Marker.js","pages/facilities/BuildingList.js","components/AuthForm.js","pages/Login.js","components/Dashboard.js","pages/Instruction.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["Api","url","this","isAuthorized","getExistingCredential","headers","Headers","set","btoa","username","key","fetch","API_BASE_URL","method","response","localStorage","getItem","authenticatedFetch","ok","checkCredential","isCredentialCorrect","setItem","status","json","Wrapper","styled","div","props","onClick","Marker","alt","text","defaultProps","useStyles","makeStyles","theme","container","display","gridTemplateColumns","gridGap","spacing","paper","padding","textAlign","color","palette","secondary","whiteSpace","marginBottom","divider","margin","tab","width","minWidth","fullHeight","paddingBottom","height","fullContainer","TabPanel","children","value","index","other","role","hidden","id","aria-labelledby","a11yProps","Card","Form","Input","input","Button","button","Logo","img","Error","Login","useState","isLoggedIn","setLoggedIn","isError","setUsername","password","setPassword","login","a","API","loggedIn","to","src","logoImg","type","onChange","e","target","placeholder","href","rel","root","appBar","zIndex","drawer","flexShrink","drawerPaper","drawerContainer","overflow","content","flexGrow","marginTop","nested","paddingLeft","routes","path","exact","component","classes","useTheme","React","tabPanelIndex","setTabPanelIndex","buildingList","setBuildingList","loyolaBuildingList","setLoyolaBuildingList","selectedBuildingIndex","setSelectedBuildingIndex","center","setCenter","zoom","selectedBuilding","setSelectedBuilding","handleBuildingClick","event","building","getBuilding","Number","Latitude","Longitude","useEffect","facilities_buildinglist","then","buildings","loyolaBuildings","filter","item","Campus","websterBuildings","Grid","className","xs","defaultCenter","yesIWantToUseGoogleMapApiInternals","onGoogleApiLoaded","map","maps","Building_Long_Name","lat","lng","style","maxHeight","AppBar","position","Tabs","newValue","indicatorColor","textColor","Tab","label","axis","direction","onChangeIndex","dir","List","ListItem","selected","ListItemText","primary","Building_Name","Fragment","Typography","variant","Address","Dashboard","facilitiesOpen","setFacilitiesOpen","CssBaseline","Toolbar","noWrap","Drawer","ListItemIcon","Collapse","in","timeout","unmountOnExit","disablePadding","Link","Divider","route","App","existingTokens","JSON","parse","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.d4bcbcad.chunk.js","sourcesContent":["export default class Api {\r\n    static API_BASE_URL = \"https://opendata.concordia.ca/API/v1/\";\r\n    static username = \"\";\r\n    static key = \"\";\r\n\r\n    static isAuthorized = false;\r\n\r\n    static async authenticatedFetch(url) {\r\n        if (!this.isAuthorized) {\r\n            this.getExistingCredential();\r\n        }\r\n\r\n        let headers = new Headers();\r\n        headers.set('Authorization', 'Basic ' + btoa(this.username + \":\" + this.key));\r\n\r\n        let response = await fetch(this.API_BASE_URL + url, {\r\n            method: \"GET\",\r\n            headers: headers\r\n        });\r\n\r\n        return response;\r\n\r\n        // if (response.status === 401) {\r\n        //     window.history.go(\"/login\");\r\n        // } else {\r\n        //     return response;\r\n        // }\r\n    }\r\n\r\n    static getExistingCredential() {\r\n        let username = localStorage.getItem(\"username\");\r\n        let key = localStorage.getItem(\"key\");\r\n\r\n        if (username && username !== \"\"\r\n            && key && key !== \"\") {\r\n            this.username = username;\r\n            this.key = key;\r\n        }\r\n    };\r\n\r\n    static async checkCredential() {\r\n        let response = await this.authenticatedFetch(\"course/catalog/filter/BIOL/200/UGRD\");\r\n        this.isAuthorized = true;\r\n        return response.ok;\r\n    }\r\n\r\n    static async login(username, key) {\r\n        this.username = username;\r\n        this.key = key;\r\n\r\n        let isCredentialCorrect = await this.checkCredential();\r\n        if (isCredentialCorrect) {\r\n            localStorage.setItem(\"username\", this.username);\r\n            localStorage.setItem(\"key\", key);\r\n        }\r\n\r\n        return isCredentialCorrect;\r\n    }\r\n\r\n    static async facilities_buildinglist() {\r\n        let response = await this.authenticatedFetch(\"facilities/buildinglist/\");\r\n\r\n        if (response.status === 401) {\r\n            return \"test2\";\r\n        } else {\r\n            return response.json();\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst Wrapper = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  width: 18px;\r\n  height: 18px;\r\n  background-color: #000;\r\n  border: 2px solid #fff;\r\n  border-radius: 100%;\r\n  user-select: none;\r\n  transform: translate(-50%, -50%);\r\n  cursor: ${props => (props.onClick ? 'pointer' : 'default')};\r\n  &:hover {\r\n    z-index: 1;\r\n  }\r\n`;\r\n\r\nconst Marker = props => (\r\n    <Wrapper\r\n        alt={props.text}\r\n        {...props.onClick ? { onClick: props.onClick } : {}}\r\n    />\r\n);\r\n\r\nMarker.defaultProps = {\r\n    onClick: null,\r\n};\r\n\r\nMarker.propTypes = {\r\n    onClick: PropTypes.func,\r\n    text: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Marker;","import React, { useEffect, useState } from 'react';\r\nimport {\r\n    Grid,\r\n    List,\r\n    ListItem,\r\n    ListItemText,\r\n    AppBar,\r\n    Tabs,\r\n    Tab,\r\n    Typography\r\n} from '@material-ui/core';\r\n\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\n\r\nimport SwipeableViews from 'react-swipeable-views';\r\n\r\nimport API from './../../context/api';\r\nimport GoogleMapReact from 'google-map-react';\r\n\r\nimport Marker from './../../components/Marker';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        display: 'grid',\r\n        gridTemplateColumns: 'repeat(12, 1fr)',\r\n        gridGap: theme.spacing(3),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(1),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n        whiteSpace: 'nowrap',\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n    divider: {\r\n        margin: theme.spacing(2, 0),\r\n    },\r\n    tab: {\r\n        padding: theme.spacing(0),\r\n        width: '50%',\r\n        minWidth: '0'\r\n    },\r\n    fullHeight: {\r\n        paddingBottom: theme.spacing(8),\r\n        height: '100vh'\r\n    },\r\n    fullContainer: {\r\n        height: '100%'\r\n    }\r\n}));\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`full-width-tabpanel-${index}`}\r\n            aria-labelledby={`full-width-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <div>{children}</div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `full-width-tab-${index}`,\r\n        'aria-controls': `full-width-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nfunction getBuilding(buildingList, index) {\r\n    return buildingList[index];\r\n}\r\n\r\nexport default function BuildingList() {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [tabPanelIndex, setTabPanelIndex] = React.useState(0);\r\n    const [selectedIndex, setSelectedIndex] = React.useState(1);\r\n    const [buildingList, setBuildingList] = useState([]);\r\n    const [loyolaBuildingList, setLoyolaBuildingList] = useState([]);\r\n    const [selectedBuildingIndex, setSelectedBuildingIndex] = useState(0);\r\n\r\n    // maps\r\n    const [center, setCenter] = useState([45.495376, -73.577997]);\r\n    const [zoom, setZoom] = useState(15);\r\n    const [selectedBuilding, setSelectedBuilding] = useState();\r\n\r\n    const handleBuildingClick = (event, index) => {\r\n        setSelectedBuildingIndex(index);\r\n        if (tabPanelIndex === 0) {\r\n            // webster\r\n            let building = getBuilding(buildingList, selectedBuildingIndex);\r\n            setSelectedBuilding(building);\r\n            setCenter([Number(building.Latitude), Number(building.Longitude)]);\r\n        }\r\n    }\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setTabPanelIndex(newValue);\r\n    };\r\n\r\n    const handleChangeIndex = (index) => {\r\n        setTabPanelIndex(index);\r\n    };\r\n\r\n    const handleApiLoaded = (map, maps) => {\r\n        \r\n    };\r\n\r\n    useEffect(() => {\r\n        API.facilities_buildinglist().then((buildings) => {\r\n            let loyolaBuildings = buildings.filter(function (item) {\r\n                return item.Campus === \"LOY\";\r\n            });\r\n\r\n            let websterBuildings = buildings.filter(function (item) {\r\n                return item.Campus === \"SGW\";\r\n            });\r\n\r\n            setLoyolaBuildingList(loyolaBuildings);\r\n            setBuildingList(websterBuildings);\r\n        });\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <Grid container spacing={1} className={classes.fullHeight}>\r\n                <Grid item xs={8} className={classes.fullContainer}>\r\n                    <GoogleMapReact\r\n                        defaultCenter={[45.495376, -73.577997]}\r\n                        center={center}\r\n                        zoom={zoom}\r\n                        yesIWantToUseGoogleMapApiInternals={true}\r\n                        onGoogleApiLoaded={({ map, maps }) => handleApiLoaded(map, maps)}\r\n                    >\r\n                        {selectedBuilding &&\r\n                            <Marker\r\n                                text={selectedBuilding.Building_Long_Name}\r\n                                lat={selectedBuilding.Latitude}\r\n                                lng={selectedBuilding.Longitude}\r\n                            />\r\n                        }\r\n                    </GoogleMapReact>\r\n                </Grid>\r\n                <Grid item xs={4} style={{ maxHeight: '100%', overflow: 'auto' }}>\r\n                    <AppBar position=\"static\" color=\"default\">\r\n                        <Tabs\r\n                            value={tabPanelIndex}\r\n                            onChange={handleChange}\r\n                            indicatorColor=\"primary\"\r\n                            textColor=\"primary\"\r\n                        >\r\n                            <Tab className={classes.tab} label=\"Webster\" {...a11yProps(0)} />\r\n                            <Tab className={classes.tab} label=\"Loyola\" {...a11yProps(1)} />\r\n                        </Tabs>\r\n                    </AppBar>\r\n                    <SwipeableViews\r\n                        axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\r\n                        index={tabPanelIndex}\r\n                        onChangeIndex={handleChangeIndex}\r\n                    >\r\n                        <TabPanel value={tabPanelIndex} index={0} dir={theme.direction}>\r\n                            <List component=\"nav\" height=\"50%\">\r\n                                {buildingList.map((building, index) => (\r\n                                    <ListItem\r\n                                        key={index}\r\n                                        button\r\n                                        selected={selectedBuildingIndex === index}\r\n                                        onClick={(event) => handleBuildingClick(event, index)}\r\n                                    >\r\n                                        <ListItemText primary={building.Building_Name}\r\n                                            secondary={\r\n                                                <React.Fragment>\r\n                                                    <Typography component=\"span\"\r\n                                                        variant=\"body2\"\r\n                                                        color=\"textSecondary\">{building.Building_Long_Name}</Typography>\r\n                                                    <br />\r\n                                                    <Typography component=\"span\"\r\n                                                        variant=\"body2\"\r\n                                                        color=\"textSecondary\">{building.Address}</Typography>\r\n                                                </React.Fragment>\r\n                                            } />\r\n                                    </ListItem>\r\n                                ))}\r\n                            </List>\r\n                        </TabPanel>\r\n                        <TabPanel value={tabPanelIndex} index={1} dir={theme.direction}>\r\n                            <List component=\"nav\">\r\n                                {loyolaBuildingList.map((building, index) => (\r\n                                    <ListItem\r\n                                        key={index}\r\n                                        button\r\n                                        selected={selectedBuildingIndex === index}\r\n                                        onClick={(event) => handleBuildingClick(event, index)}\r\n                                    >\r\n                                        <ListItemText primary={building.Building_Long_Name} />\r\n                                    </ListItem>\r\n                                ))}\r\n                            </List>\r\n                        </TabPanel>\r\n                    </SwipeableViews>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n}","import styled from 'styled-components';\r\n\r\nconst Card = styled.div`\r\n  box-sizing: border-box;\r\n  max-width: 410px;\r\n  margin: 0 auto;\r\n  padding: 0 2rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nconst Form = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  padding: 1rem;\r\n  border: 1px solid #999;\r\n  margin-bottom: 1rem;\r\n  font-size: 0.8rem;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  background: linear-gradient(to bottom, #6371c7, #5563c1);\r\n  border-color: #3f4eae;\r\n  border-radius: 3px;\r\n  padding: 1rem;\r\n  color: white;\r\n  font-weight: 700;\r\n  width: 100%;\r\n  margin-bottom: 1rem;\r\n  font-size: 0.8rem;\r\n`;\r\n\r\nconst Logo = styled.img`\r\n  width: 50%;\r\n  margin-bottom: 1rem;\r\n`;\r\n\r\nconst Error = styled.div`\r\n  background-color: red;\r\n`;\r\n\r\nexport { Form, Input, Button, Logo, Card, Error };","import React, { useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport logoImg from './../logo.svg'\r\nimport { Card, Logo, Form, Input, Button, Error } from './../components/AuthForm'\r\n\r\nimport API from './../context/api';\r\n\r\nfunction Login() {\r\n    const [isLoggedIn, setLoggedIn] = useState(false);\r\n    const [isError, setIsError] = useState(false);\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    const login = async() => {\r\n        let loggedIn = await API.login(username, password);\r\n        setLoggedIn(loggedIn);\r\n    }\r\n\r\n    if (isLoggedIn) {\r\n        return <Redirect to=\"/\" />;\r\n    }\r\n\r\n    return (\r\n        <Card>\r\n            <Logo src={logoImg} />\r\n            <Form>\r\n                <Input\r\n                    type=\"username\"\r\n                    value={username}\r\n                    onChange={e => {\r\n                        setUsername(e.target.value);\r\n                    }}\r\n                    placeholder=\"email\"\r\n                />\r\n                <Input\r\n                    type=\"password\"\r\n                    value={password}\r\n                    onChange={e => {\r\n                        setPassword(e.target.value);\r\n                    }}\r\n                    placeholder=\"password\"\r\n                />\r\n                <Button onClick={login}>Sign In</Button>\r\n            </Form>\r\n            <a href=\"https://opendata.concordia.ca/admin/register.php\"\r\n                rel=\"noopener noreferrer\"\r\n                target=\"_blank\">Don't have an account?</a>\r\n            {isError && <Error>The username or password provided were incorrect!</Error>}\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\nimport { Route, Switch, BrowserRouter, Link } from \"react-router-dom\";\r\n\r\nimport Collapse from '@material-ui/core/Collapse';\r\n\r\nimport ApartmentIcon from '@material-ui/icons/Apartment';\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\nimport LocalConvenienceStoreIcon from '@material-ui/icons/LocalConvenienceStore';\r\n\r\nimport Instruction from '../pages/Instruction';\r\nimport BuildingList from '../pages/facilities/BuildingList';\r\nimport Login from '../pages/Login';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerContainer: {\r\n        overflow: 'auto',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(1),\r\n        marginTop: theme.spacing(8)\r\n    },\r\n    nested: {\r\n        paddingLeft: theme.spacing(4),\r\n    },\r\n}));\r\n\r\nconst routes = [\r\n    {\r\n        path: \"/\",\r\n        exact: true,\r\n        component: Instruction\r\n    },\r\n    {\r\n        path: \"/login\",\r\n        component: Login\r\n    },\r\n    {\r\n        path: \"/facilities/buildinglist\",\r\n        component: BuildingList\r\n    }\r\n]\r\n\r\nexport default function Dashboard() {\r\n    const classes = useStyles();\r\n    const [facilitiesOpen, setFacilitiesOpen] = React.useState(true);\r\n\r\n    const handleFacilitiesClick = () => {\r\n        setFacilitiesOpen(!facilitiesOpen);\r\n    };\r\n\r\n    return (\r\n        <BrowserRouter>\r\n            <div className={classes.root}>\r\n                <CssBaseline />\r\n                <AppBar position=\"fixed\" className={classes.appBar}>\r\n                    <Toolbar>\r\n                        <Typography variant=\"h6\" noWrap>\r\n                            Concordia Open Data\r\n                        </Typography>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <Drawer\r\n                    className={classes.drawer}\r\n                    variant=\"permanent\"\r\n                    classes={{\r\n                        paper: classes.drawerPaper,\r\n                    }}\r\n                >\r\n                    <Toolbar />\r\n                    <div className={classes.drawerContainer}>\r\n                        <List>\r\n                            <ListItem button onClick={handleFacilitiesClick}>\r\n                                <ListItemIcon>\r\n                                    <ApartmentIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary=\"Facilities\" />\r\n                                {facilitiesOpen ? <ExpandLess /> : <ExpandMore />}\r\n                            </ListItem>\r\n                            <Collapse in={facilitiesOpen} timeout=\"auto\" unmountOnExit>\r\n                                <List component=\"div\" disablePadding>\r\n                                    <ListItem button className={classes.nested} component={Link} to=\"/facilities/buildinglist\">\r\n                                        <ListItemIcon>\r\n                                            <LocalConvenienceStoreIcon />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText primary=\"Building List\" />\r\n                                    </ListItem>\r\n                                </List>\r\n                            </Collapse>\r\n                        </List>\r\n                        <Divider />\r\n                        <List>\r\n                        </List>\r\n                    </div>\r\n                </Drawer>\r\n                <main className={classes.content}>\r\n                    <Switch>\r\n                        {routes.map((route, index) => (\r\n                            <Route\r\n                                key={index}\r\n                                exact={route.exact}\r\n                                path={route.path}\r\n                                component={route.component}\r\n                            />\r\n                        ))}\r\n                    </Switch>\r\n                </main>\r\n            </div>\r\n        </BrowserRouter>\r\n    );\r\n}","import React from 'react';\r\n\r\nexport default function Instruction() {\r\n    return (\r\n        <div>\r\n            click on an item in sidebar to see data\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react';\nimport './App.css';\n\n// import { BrowserRouter as Router, Link, Route } from \"react-router-dom\";\n// import PrivateRoute from './PrivateRoute';\n// import Login from './pages/Login';\n\n// import Home from './pages/Home';\n// import Admin from './pages/Admin';\n\n// import { AuthContext } from \"./context/auth\";\n\nimport Dashboard from \"./components/Dashboard\";\n\nfunction App() {\n  const existingTokens = JSON.parse(localStorage.getItem(\"tokens\"));\n  const [authTokens, setAuthTokens] = useState(existingTokens);\n\n  const setTokens = (data) => {\n    localStorage.setItem(\"tokens\", JSON.stringify(data));\n    setAuthTokens(data);\n  }\n\n  return (\n    // <AuthContext.Provider value={{ authTokens, setAuthTokens: setTokens }}>\n    //   <Router>\n    //     <div>\n    //       <ul>\n    //         <li>\n    //           <Link to=\"/\">Home Page</Link>\n    //         </li>\n    //         <li>\n    //           <Link to=\"/admin\">Admin Page</Link>\n    //         </li>\n    //       </ul>\n    //       <Route exact path=\"/\" component={Home} />\n    //       <Route path=\"/login\" component={Login} />\n    //       <PrivateRoute path=\"/admin\" component={Admin} />\n    //     </div>\n    //   </Router>\n    // </AuthContext.Provider>\n    <Dashboard />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}